@page "/companies"
@inject NavigationManager NavigationManager
@inject UserController User
@inject CompanyController CompanyController
@inject CurrentLanguage language
@inject IJSRuntime JSRuntime
@using Syncfusion.Blazor
@using Syncfusion.Blazor.Lists
@using System.Collections.ObjectModel;

<style>
    body { /*achtergrond*/
        background: linear-gradient(to left, #C4A484 50%, transparent 50%), url('https://i.imgur.com/GZVw5gT.png') repeat-x;
        background-color: #E9E9E9;
        background-size: 15500px 300px;
        background-position: 0px 0px;
        display: flex;
        flex-direction: column;
    }

    .mainsquare { /*rechthoek*/
        width: 1200px;
        height: 800px;
        background-color: #099F91;
        border-radius: 10px;
        position: relative;
        top: 100px;
        left: 50%;
        transform: translateX(-50%);
        display: flex;
        flex-direction: column;
        align-items: center;
    }

    .squareinmainsquare { /*wit rechthoek in main rechthoek*/
        width: 800px;
        height: 700px;
        background-color: #E9E9E9;
        border-radius: 10px;
        position: absolute;
        top: 50px;
        left: 350px;
    }

    .smallersquare { /*grootte kleinere rechthoek in tweede rechthoek*/
        width: 300px;
        height: 800px;
        background-color: #00A89B;
        border-radius: 10px;
        position: absolute;
        top: 0px;
        left: 0px;
        z-index: -1;
    }

    .buurtboer-logo {
        width: 300px;
        height: 250px;
        top: 0px;
        left: 0%;
        position: absolute;
    }

    .table-container {
        height: 500px;
        overflow-y: scroll;
    }

    .text-containersquare { /*positie en grootte tekst*/
        display: flex;
        flex-direction: column;
        justify-content: center;
        color: black;
        font-family: monospace;
        font-size: 24px;
        margin-top: 30px;
        margin-left: 325px;
    }

    .trashcan-button {
        width: 40px;
        height: 40px;
        top: 40px;
        left: 725px;
        position: absolute;
    }

    .deletecompanies-button {
        background-color: #F9834C;
        color: white;
        border: none;
        border-radius: 8px;
        padding: 15px 0;
        width: 30%;
        font-size: 20px;
        cursor: pointer;
        margin-top: 20px;
        margin-left: 280px;
    }

    .homescreen-button { /*knop om naar home page te gaan*/
        position: absolute;
        top: 350px;
        left: 30px;
        padding: 20px 0;
        width: 80%;
        background-color: #099F91;
        border: 1px solid #099F91;
        color: white;
        font-size: 16px;
        text-align: center;
        border-radius: 10px;
    }

        .homescreen-button:hover {
            background-color: #F9834C;
        }

    .employee-button { /*knop om naar employees page te gaan*/
        position: absolute;
        top: 425px;
        left: 30px;
        padding: 20px 0;
        width: 80%;
        background-color: #099F91;
        border: 1px solid #099F91;
        color: white;
        font-size: 16px;
        text-align: center;
        border-radius: 10px;
    }

        .employee-button:hover {
            background-color: #F9834C;
        }

    .grocerylist-button { /*knop om naar grocerylist page te gaan*/
        position: absolute;
        top: 500px;
        left: 30px;
        padding: 20px 0;
        width: 80%;
        background-color: #099F91;
        border: 1px solid #099F91;
        color: white;
        font-size: 16px;
        text-align: center;
        border-radius: 10px;
    }

        .grocerylist-button:hover {
            background-color: #F9834C;
        }

    .companies-button { /*knop om naar grocerylist page te gaan*/
        position: absolute;
        top: 500px;
        left: 30px;
        padding: 20px 0;
        width: 80%;
        background-color: #099F91;
        border: 1px solid #099F91;
        color: white;
        font-size: 16px;
        text-align: center;
        border-radius: 10px;
    }

        .companies-button:hover {
            background-color: #F9834C;
        }

    .lunchdata-button { /*knop om naar lunchdata page te gaan*/
        position: absolute;
        top: 575px;
        left: 30px;
        padding: 20px 0;
        width: 80%;
        background-color: #099F91;
        border: 1px solid #099F91;
        color: white;
        font-size: 16px;
        text-align: center;
        border-radius: 10px;
    }

        .lunchdata-button:hover {
            background-color: #F9834C;
        }

    .button-container { /*positie "NL" en "EN" buttons*/
        position: absolute;
        top: 250px;
        left: 30px;
        display: flex;
        flex-direction: row;
    }

    .language-button-clicked { /*kleur van taal button die aangeklikt is*/
        background-color: #F9834C;
        color: white;
        border: none;
        border-radius: 10px;
        padding: 10px 15px;
        font-size: 16px;
        margin-right: 10px;
        cursor: pointer;
    }

    .language-button-notclicked { /*kleur van taal button die NIET aangeklikt is*/
        background-color: #099F91;
        color: white;
        border: none;
        border-radius: 10px;
        padding: 10px 15px;
        font-size: 16px;
        margin-right: 10px;
        cursor: pointer;
    }

    .logout-button {
        position: absolute;
        top: 730px;
        left: 25px;
        padding: 20px 0px;
        height: 30px;
        width: 25%;
        background-color: #099F91;
        border: 1px solid #099F91;
        color: white;
        font-size: 13px;
        text-align: center;
        border-radius: 10px;
        line-height: 50%;
    }

        .logout-button:hover {
            background-color: #F9834C;
        }
</style>

<div class="mainsquare">
    @* HTML elements*@
    <div class="smallersquare">
        <img src="https://i.imgur.com/MF5gfZC.png" class="buurtboer-logo" />
        <div class="button-container">
            <button class="@GetLanguageButtonClass(true)"
            @onclick="() => SelectLanguage(true)">
                NL
            </button>

            <button class="@GetLanguageButtonClass(false)"
            @onclick="() => SelectLanguage(false)">
                EN
            </button>
        </div>
        <button class="homescreen-button" @onclick="HomeScreenRouting">Home</button>
        @if (User.CurrentUser != null)
        {
            @if (CheckUserRole() == Role.SuperAdmin)
            {
                <button class="companies-button" @onclick="CompaniesRouting">Companies</button>
            }
            else
            {
                <button class="grocerylist-button" @onclick="GroceryListRouting">Grocery List</button>
            }
        }
        <button class="employee-button" @onclick="EmployeeRouting">Employees</button>
        <button class="lunchdata-button" @onclick="LunchDataRouting">Lunchdata</button>
        <button class="logout-button" @onclick="HandleLogout">Log out</button>
    </div>
    <div class="squareinmainsquare">
        <div class="text-containersquare">
            <p>Companies</p>
        </div>
        <div class="table-container">
            <table class="table">
                <thead>
                    <tr>
                        <th>Name</th>
                        <th>Description</th>
                    </tr>
                </thead>    
                <tbody>
                    @foreach (var company in companies)
                    {
                        <tr>
                            <td>@company.Name</td>
                            <td>@company.Description</td>
                            <td><input type="checkbox" @onclick="() => CheckboxClicked(company)" @bind=@company.IsSelected /></td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
        <img src="https://imgur.com/eOCpUcm.png" class="trashcan-button" />
        <button class="deletecompanies-button" @onclick="DeleteCompanies">Delete Companies</button>
    </div>
</div>

@code {
    ObservableCollection<CompanyModel> companies = new();
    public List<CompanyModel> CompaniesToBeDeleted = new();
    private bool isDutchSelected = true;

    private void HandleLogout()
    {
        User.Logout();
        NavigationManager.NavigateTo("/login");
    }

    private void CheckboxClicked(CompanyModel company) // als knop geklikt wordt gebruiker toevoegen aan lijst om te verwijderen en anders er weer uit halen.
    {
        // geselecteerd van true naar false of andersom.
        company.IsSelected = !company.IsSelected;

        if (company.IsSelected)
        {
            // gebruiker toevoegen.
            CompaniesToBeDeleted.Add(company);
        }
        else
        {
            // Gebruiker verwijderen.
            CompaniesToBeDeleted.Remove(company);
        }
    }

    protected async override Task OnInitializedAsync() // Make the method asynchronous
    {
        if (!IsUserLoggedIn())
        {

            NavigationManager.NavigateTo("/login");
        }
        await GetCompanies();
        transformCompanies();
        StateHasChanged();
    }

    private bool IsUserLoggedIn() // kijken of gebruiker ingelogd is.
    {
        return User.CurrentUser != null;// deze op false zetten zorgt ervoor dat gebruiker direct naar login scherm wordt gestuurd als hij niet ingelogd is.
    }

    private async Task GetCompanies()
    {
        await CompanyController.GetAllCompanies();
    }

    private void transformCompanies() // alles omzetten naar een usermodel en de admin van dat moment niet toevoegen aan de lijst.
    {
        foreach (var company in CompanyController.Companies)
        {
            companies.Add(new CompanyModel
            {
                Name = company.Name,
                Description = company.Description,
                IsSelected = false,
                ID = company.Id
            });
        }
    }

    public class CompanyModel
    {
        public string Name { get; set; }
        public string Description { get; set; }
        public bool IsSelected { get; set; }
        public Guid ID { get; set; }
    }

    private async void DeleteCompanies()
    {
        if (CompaniesToBeDeleted.Count() > 0)
        {
            bool confirmed = await JSRuntime.InvokeAsync<bool>("confirm", "Are you sure you want to delete the selected company/companies?");
            if (confirmed)
            {
                await CompanyController.DeleteCompanies(CompaniesToBeDeleted.Select(c => c.ID).ToArray()); // delete companies callen met de ID's van de copmanies in een array.
                foreach (var company in CompaniesToBeDeleted)
                {
                    companies.Remove(company);
                }
                string alert = CompaniesToBeDeleted.Count() > 1 ? "companies have been deleted!" : "copmany has been deleted!";
                await JSRuntime.InvokeVoidAsync("alert", alert);
                CompaniesToBeDeleted.Clear();
                StateHasChanged();
            }
        }
    }

    private Role CheckUserRole()
    {
        return User.CurrentUser.Role;
    }

    private void HomeScreenRouting()
    {
        NavigationManager.NavigateTo("/home");
    }

    private void EmployeeRouting()
    {
        NavigationManager.NavigateTo("/employees");
    }

    private void GroceryListRouting()
    {
        NavigationManager.NavigateTo("/grocerylist");
    }

    private void LunchDataRouting()
    {
        NavigationManager.NavigateTo("/lunchdata");
    }

    private void CompaniesRouting()
    {
        NavigationManager.NavigateTo("/companies");
    }

    private string GetLanguageButtonClass(bool isDutch) // hiermee kijk je welke taal er geselecteerd is en of hij dus moet veranderen of niet.
    {
        if (isDutch == language.isDutchSelected)
        {
            return "language-button-clicked";
        }
        else
        {
            return "language-button-notclicked";
        }
    }

    private void SelectLanguage(bool isDutch)
    {
        // kijken of nederlands geselecteerd is.
        language.isDutchSelected = isDutch;

        // refresh de webpage met de goede kleuren.
        StateHasChanged();
    }
}